export const blogPosts = [
  {
    id: 1,
    title: "React Basics",
    content: "ReactJS is a component-based JavaScript library used to build dynamic and interactive user interfaces. It simplifies the creation of single-page applications (SPAs) with a focus on performance and maintainability.It is developed and maintained by Facebook.The latest version of React is React 19Uses a virtual DOM for faster updates.Supports a declarative approach to designing UI components.Ensures better application control with one-way data binding.React operates by creating an in-memory virtual DOM rather than directly manipulating the browser’s DOM. It performs necessary manipulations within this virtual representation before applying changes to the actual browser DOM.Every React Component has a lifecycle of its own, the lifecycle of a component can be defined as the series of methods that are invoked in different stages of the component’s existence. React automatically calls these methods at different points in a component’s life cycle. Understanding these phases helps manage the state, perform side effects, and optimize components effectively.ReactDOM has been removed in React 19. The rendering and DOM manipulation responsibilities have now been directly integrated into the core of React, and ReactDOM.render() is no longer needed. This move simplifies the React API, and developers are now encouraged to use the root API for managing DOM rendering.",
    author: "Abhimanyu pandey",
    date: "June 2025",
    category: "react", 
  },
  {
    id: 2,
    title: "JS Closures",
    content: "A JavaScript closure is a core concept that underpins much of the language's flexibility and power, especially when dealing with functions and scopes. In simple terms, a closure is created when a function is defined inside another function, allowing the inner function to access variables and parameters of the outer function—even after the outer function has completed execution. This happens because functions in JavaScript form lexical closures: they remember the environment in which they were created. That environment includes all variables that were in scope at the time of function creation. Closures give developers the ability to create private variables, build function factories, and manage state without relying on global variables. For instance, you can create a counter function that remembers the count between calls, even though the counter variable isn’t in the global scope.This behavior becomes particularly useful in asynchronous programming—like when setting timeouts, handling events, or making network requests—because closures allow you to preserve necessary data without exposing it globally. They are heavily used in React hooks, such as useState and useEffect, where maintaining access to the latest state or props is crucial. Closures also enable currying and partial application, allowing developers to break down functions into smaller, more" ,
    author:"Anamika pandey",
    date:"December 2024",
    category: "javascript",
  },
  {
    id: 3,
    title: "CSS Styling",
    content: "CSS (Cascading Style Sheets) is a cornerstone technology used in web development to control the presentation and layout of HTML elements on a web page. It allows developers and designers to separate content from design, enabling more maintainable and flexible code. CSS defines how elements should be displayed—setting rules for color, typography, spacing, alignment, positioning, animations, responsiveness, and much more. Its cascading nature means that styles can be inherited from parent elements, overridden by more specific rules, or controlled using the !important directive in special cases. CSS supports selectors that target HTML elements by tag name, class, ID, attributes, or even position in the document tree, giving fine-grained control over styling.Modern CSS has evolved far beyond basic text and background colors. With the introduction of CSS3, developers gained powerful tools such as flexbox and grid layout, which make building complex, responsive layouts much easier and cleaner compared to older float-based designs. Media queries allow pages to adapt to different screen sizes and devices, forming the basis of responsive design. Additionally, CSS variables (custom properties), pseudo-elements (like ::before and ::after), and pseudo-classes (like :hover, :nth-child) provide dynamic and context-aware styling without JavaScript. Advanced features ",
    author:"renu pandey",
    date:"January 2025",
    category: "css",
  },
  {
    id: 4,
    title: "springBoot",
    content: "CSS (Cascading Style Sheets) is a cornerstone technology used in web development to control the presentation and layout of HTML elements on a web page. It allows developers and designers to separate content from design, enabling more maintainable and flexible code. CSS defines how elements should be displayed—setting rules for color, typography, spacing, alignment, positioning, animations, responsiveness, and much more. Its cascading nature means that styles can be inherited from parent elements, overridden by more specific rules, or controlled using the !important directive in special cases. CSS supports selectors that target HTML elements by tag name, class, ID, attributes, or even position in the document tree, giving fine-grained control over styling.Modern CSS has evolved far beyond basic text and background colors. With the introduction of CSS3, developers gained powerful tools such as flexbox and grid layout, which make building complex, responsive layouts much easier and cleaner compared to older float-based designs. Media queries allow pages to adapt to different screen sizes and devices, forming the basis of responsive design. Additionally, CSS variables (custom properties), pseudo-elements (like ::before and ::after), and pseudo-classes (like :hover, :nth-child) provide dynamic and context-aware styling without JavaScript. Advanced features s",
    date:"January 2025",
    category: "springBoot",
  },
  {
    id: 5,
    title: "objective c",
    content: "ReactJS is a component-based JavaScript library used to build dynamic and interactive user interfaces. It simplifies the creation of single-page applications (SPAs) with a focus on performance and maintainability.It is developed and maintained by Facebook.The latest version of React is React 19Uses a virtual DOM for faster updates.Supports a declarative approach to designing UI components.Ensures better application control with one-way data binding.React operates by creating an in-memory virtual DOM rather than directly manipulating the browser’s DOM. It performs necessary manipulations within this virtual representation before applying changes to the actual browser DOM.Every React Component has a lifecycle of its own, the lifecycle of a component can be defined as the series of methods that are invoked in different stages of the component’s existence. React automatically calls these methods at different points in a component’s life cycle. Understanding these phases helps manage the state, perform side effects, and optimize components effectively.ReactDOM has been removed in React 19. The rendering and DOM manipulation responsibilities have now been directly integrated into the core of React, and ReactDOM.render() is no longer needed. This move simplifies the React API, and developers are now encouraged to use the root API for managing DOM rendering.",
    author:"Anamika pandey",
    date:"february 2025",
    category: "objectiveC",
  },
  {
    id: 6,
    title: "HTML",
    content:  "ReactJS is a component-based JavaScript library used to build dynamic and interactive user interfaces. It simplifies the creation of single-page applications (SPAs) with a focus on performance and maintainability.It is developed and maintained by Facebook.The latest version of React is React 19Uses a virtual DOM for faster updates.Supports a declarative approach to designing UI components.Ensures better application control with one-way data binding.React operates by creating an in-memory virtual DOM rather than directly manipulating the browser’s DOM. It performs necessary manipulations within this virtual representation before applying changes to the actual browser DOM.Every React Component has a lifecycle of its own, the lifecycle of a component can be defined as the series of methods that are invoked in different stages of the component’s existence. React automatically calls these methods at different points in a component’s life cycle. Understanding these phases helps manage the state, perform side effects, and optimize components effectively.ReactDOM has been removed in React 19. The rendering and DOM manipulation responsibilities have now been directly integrated into the core of React, and ReactDOM.render() is no longer needed. This move simplifies the React API, and developers are now encouraged to use the root API for managing DOM rendering.",
    author:"Abhimanyu pandey",
    date:"March 2024",
    category: "HTML",
  },
  {
    id: 7,
    title: "DSA",
    content: "CSS (Cascading Style Sheets) is a cornerstone technology used in web development to control the presentation and layout of HTML elements on a web page. It allows developers and designers to separate content from design, enabling more maintainable and flexible code. CSS defines how elements should be displayed—setting rules for color, typography, spacing, alignment, positioning, animations, responsiveness, and much more. Its cascading nature means that styles can be inherited from parent elements, overridden by more specific rules, or controlled using the !important directive in special cases. CSS supports selectors that target HTML elements by tag name, class, ID, attributes, or even position in the document tree, giving fine-grained control over styling.Modern CSS has evolved far beyond basic text and background colors. With the introduction of CSS3, developers gained powerful tools such as flexbox and grid layout, which make building complex, responsive layouts much easier and cleaner compared to older float-based designs. Media queries allow pages to adapt to different screen sizes and devices, forming the basis of responsive design. Additionally, CSS variables (custom properties), pseudo-elements (like ::before and ::after), and pseudo-classes (like :hover, :nth-child) provide dynamic and context-aware styling without JavaScript. Advanced features such as transitions, transformations, and animations enable interactive and engaging user experiences entirely with CSS.Furthermore, tools like SASS, PostCSS, and Tailwind CSS have extended the power and productivity of CSS, offering features like nesting, mixins, utility classes, and more. CSS also plays a crucial role in accessibility and performance: proper styling ensures that websites are not only visually appealing but also usable for people with disabilities and optimized for faster load times. Mastering CSS means understanding both its foundational rules and its deeper capabilities in layout design, responsiveness, and interactivity. In today’s development environment, whether you are building static websites, dynamic SPAs with frameworks like React, or mobile-friendly UIs, a strong command of CSS is essential for creating modern, professional, and user-friendly web interfaces.",
    author:"Om pandey pandey",
    date:"April 2025",
    category: "DSA",
  },
  {
    id: 8,
    title: "Hashmap",
    content:  "ReactJS is a component-based JavaScript library used to build dynamic and interactive user interfaces. It simplifies the creation of single-page applications (SPAs) with a focus on performance and maintainability.It is developed and maintained by Facebook.The latest version of React is React 19Uses a virtual DOM for faster updates.Supports a declarative approach to designing UI components.Ensures better application control with one-way data binding.React operates by creating an in-memory virtual DOM rather than directly manipulating the browser’s DOM. It performs necessary manipulations within this virtual representation before applying changes to the actual browser DOM.Every React Component has a lifecycle of its own, the lifecycle of a component can be defined as the series of methods that are invoked in different stages of the component’s existence. React automatically calls these methods at different points in a component’s life cycle. Understanding these phases helps manage the state, perform side effects, and optimize components effectively.ReactDOM has been removed in React 19. The rendering and DOM manipulation responsibilities have now been directly integrated into the core of React, and ReactDOM.render() is no longer needed. This move simplifies the React API, and developers are now encouraged to use the root API for managing DOM rendering.",
    author:"Anamika pandey",
    date:"May 2025",   
    category: "Hash",
  },
  {
    id: 9,
    title: "Machine Learning",
    content:  "ReactJS is a component-based JavaScript library used to build dynamic and interactive user interfaces. It simplifies the creation of single-page applications (SPAs) with a focus on performance and maintainability.It is developed and maintained by Facebook.The latest version of React is React 19Uses a virtual DOM for faster updates.Supports a declarative approach to designing UI components.Ensures better application control with one-way data binding.React operates by creating an in-memory virtual DOM rather than directly manipulating the browser’s DOM. It performs necessary manipulations within this virtual representation before applying changes to the actual browser DOM.Every React Component has a lifecycle of its own, the lifecycle of a component can be defined as the series of methods that are invoked in different stages of the component’s existence. React automatically calls these methods at different points in a component’s life cycle. Understanding these phases helps manage the state, perform side effects, and optimize components effectively.ReactDOM has been removed in React 19. The rendering and DOM manipulation responsibilities have now been directly integrated into the core of React, and ReactDOM.render() is no longer needed. This move simplifies the React API, and developers are now encouraged to use the root API for managing DOM rendering.",
    author:"Anamika pandey",
    date:"June 2025",
    category: "ML",
  }
];
